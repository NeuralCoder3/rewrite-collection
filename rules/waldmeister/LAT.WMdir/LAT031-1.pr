%--------------------------------------------------------------------------
% File     : LAT031-1 : TPTP v2.4.1. Released v2.4.0.
% Domain   : Lattice Theory
% Problem  : Distributivity of meet implies distributivity of join
% Version  : [McC88] (equality) axioms.
% English  :

% Refs     : [DeN00] DeNivelle (2000), Email to G. Sutcliffe
%            [McC88] McCune (1988), Challenge Equality Problems in Lattice
% Source   : [DeN00]
% Names    : dist_join [DeN00]

% Status   : unsatisfiable
% Rating   : 0.00 v2.4.0
% Syntax   : Number of clauses    :   10 (   0 non-Horn;  10 unit;   1 RR)
%            Number of literals   :   10 (  10 equality)
%            Maximal clause size  :    1 (   1 average)
%            Number of predicates :    1 (   0 propositional; 2-2 arity)
%            Number of functors   :    5 (   3 constant; 0-2 arity)
%            Number of variables  :   19 (   2 singleton)
%            Maximal term depth   :    3 (   2 average)

% Comments : 
%          : tptp2X -f waldmeister -t rm_equality:rstfp LAT031-1.p 
%--------------------------------------------------------------------------

NAME            Unknown

MODE            PROOF

SORTS           ANY

SIGNATURE       join: ANY ANY -> ANY
                meet: ANY ANY -> ANY
                xx: -> ANY
                yy: -> ANY
                zz: -> ANY

ORDERING        KBO
                join=1, meet=1, zz=1, yy=1, xx=1
                join > meet > zz > yy > xx

VARIABLES       X,Y,Z: ANY

EQUATIONS       meet(X, join(X, Y)) = X   % absorption1
                join(X, meet(X, Y)) = X   % absorption2
                join(join(X, Y), Z) = join(X, join(Y, Z))   % associativity_of_join
                meet(meet(X, Y), Z) = meet(X, meet(Y, Z))   % associativity_of_meet
                join(X, Y) = join(Y, X)   % commutativity_of_join
                meet(X, Y) = meet(Y, X)   % commutativity_of_meet
                meet(X, join(Y, Z)) = join(meet(X, Y), meet(X, Z))   % dist_meet
                join(X, X) = X   % idempotence_of_join
                meet(X, X) = X   % idempotence_of_meet

CONCLUSION      join(xx, meet(yy, zz)) = meet(join(xx, yy), join(xx, zz))   % dist_join
%--------------------------------------------------------------------------
