%--------------------------------------------------------------------------
% File     : LAT040-1 : TPTP v2.4.1. Released v2.4.0.
% Domain   : Lattice Theory
% Problem  : Another simplification rule for distributive lattices
% Version  : [McC88] (equality) axioms.
% English  : In every distributive lattice the simplification rule holds:
%            forall x, y, z: (x v y = x v z, x & y = x & z -> y = z ).

% Refs     : [DeN00] DeNivelle (2000), Email to G. Sutcliffe
%            [McC88] McCune (1988), Challenge Equality Problems in Lattice
% Source   : [DeN00]
% Names    : lattice-simpl [DeN00]

% Status   : unsatisfiable
% Rating   : 0.00 v2.4.0
% Syntax   : Number of clauses    :   13 (   0 non-Horn;  13 unit;   3 RR)
%            Number of literals   :   13 (  13 equality)
%            Maximal clause size  :    1 (   1 average)
%            Number of predicates :    1 (   0 propositional; 2-2 arity)
%            Number of functors   :    5 (   3 constant; 0-2 arity)
%            Number of variables  :   22 (   2 singleton)
%            Maximal term depth   :    3 (   2 average)

% Comments : 
%          : tptp2X -f waldmeister -t rm_equality:rstfp LAT040-1.p 
%--------------------------------------------------------------------------

NAME            Unknown

MODE            PROOF

SORTS           ANY

SIGNATURE       join: ANY ANY -> ANY
                meet: ANY ANY -> ANY
                xx: -> ANY
                yy: -> ANY
                zz: -> ANY

ORDERING        KBO
                join=1, meet=1, xx=1, yy=1, zz=1
                join > meet > xx > yy > zz

VARIABLES       X,Y,Z: ANY

EQUATIONS       meet(X, join(X, Y)) = X   % absorption1
                join(X, meet(X, Y)) = X   % absorption2
                join(join(X, Y), Z) = join(X, join(Y, Z))   % associativity_of_join
                meet(meet(X, Y), Z) = meet(X, meet(Y, Z))   % associativity_of_meet
                join(X, Y) = join(Y, X)   % commutativity_of_join
                meet(X, Y) = meet(Y, X)   % commutativity_of_meet
                join(X, meet(Y, Z)) = meet(join(X, Y), join(X, Z))   % dist_join
                meet(X, join(Y, Z)) = join(meet(X, Y), meet(X, Z))   % dist_meet
                join(X, X) = X   % idempotence_of_join
                meet(X, X) = X   % idempotence_of_meet
                join(xx, yy) = join(xx, zz)   % lhs1
                meet(xx, yy) = meet(xx, zz)   % lhs2

CONCLUSION      yy = zz   % rhs
%--------------------------------------------------------------------------
