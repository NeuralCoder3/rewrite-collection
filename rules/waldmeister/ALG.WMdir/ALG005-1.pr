%--------------------------------------------------------------------------
% File     : ALG005-1 : TPTP v2.4.1. Released v2.2.0.
% Domain   : General Algebra
% Problem  : Associativity of intersection in terms of set difference.
% Version  : [MP96] (equality) axioms : Especial.
% English  : Starting with Kalman's basis for families of sets closed under
%            set difference, we define intersection and show it to be
%            associative.

% Refs     : [McC98] McCune (1998), Email to G. Sutcliffe
%          : [MP96]  McCune & Padmanabhan (1996), Automated Deduction in Eq
% Source   : [McC98]
% Names    : SD-2-a [MP96]

% Status   : unsatisfiable
% Rating   : 0.00 v2.2.1
% Syntax   : Number of clauses    :    5 (   0 non-Horn;   5 unit;   1 RR)
%            Number of literals   :    5 (   5 equality)
%            Maximal clause size  :    1 (   1 average)
%            Number of predicates :    1 (   0 propositional; 2-2 arity)
%            Number of functors   :    5 (   3 constant; 0-2 arity)
%            Number of variables  :    9 (   1 singleton)
%            Maximal term depth   :    3 (   2 average)

% Comments :
%          : tptp2X -f waldmeister -t rm_equality:rstfp ALG005-1.p 
%--------------------------------------------------------------------------

NAME            Unknown

MODE            PROOF

SORTS           ANY

SIGNATURE       a: -> ANY
                b: -> ANY
                c: -> ANY
                difference: ANY ANY -> ANY
                multiply: ANY ANY -> ANY

ORDERING        KBO
                difference=1, multiply=1, c=1, b=1, a=1
                difference > multiply > c > b > a

VARIABLES       X,Y,Z: ANY

EQUATIONS       multiply(X, Y) = difference(X, difference(X, Y))   % intersection
                difference(X, difference(Y, X)) = X   % set_difference_1
                difference(X, difference(X, Y)) = difference(Y, difference(Y, X))   % set_difference_2
                difference(difference(X, Y), Z) = difference(difference(X, Z), difference(Y, Z))   % set_difference_3

CONCLUSION      multiply(multiply(a, b), c) = multiply(a, multiply(b, c))   % prove_associativity_of_multiply
%--------------------------------------------------------------------------
