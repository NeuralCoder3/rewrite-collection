%--------------------------------------------------------------------------
% File     : RNG032-7 : TPTP v2.4.1. Released v1.0.0.
% Domain   : Ring Theory (Right alternative)
% Problem  : 6*assr(X,X,Y)^6 = additive identity
% Version  : [Ste87] (equality) axioms : Augmented.
% English  : 

% Refs     : [Ste87] Stevens (1987), Some Experiments in Nonassociative Rin
% Source   : [Ste87]
% Names    : Conjecture 3 [Ste87]

% Status   : open
% Rating   : 1.00 v2.0.0
% Syntax   : Number of clauses    :   22 (   0 non-Horn;  22 unit;   1 RR)
%            Number of literals   :   22 (  22 equality)
%            Maximal clause size  :    1 (   1 average)
%            Number of predicates :    1 (   0 propositional; 2-2 arity)
%            Number of functors   :    8 (   3 constant; 0-3 arity)
%            Number of variables  :   43 (   2 singleton)
%            Maximal term depth   :    9 (   2 average)

% Comments : Extra lemmas added to help the ITP prover.
%          : tptp2X -f waldmeister -t rm_equality:rstfp RNG032-7.p 
%--------------------------------------------------------------------------

NAME            Unknown

MODE            PROOF

SORTS           ANY

SIGNATURE       add: ANY ANY -> ANY
                additive_identity: -> ANY
                additive_inverse: ANY -> ANY
                associator: ANY ANY ANY -> ANY
                commutator: ANY ANY -> ANY
                multiply: ANY ANY -> ANY
                x: -> ANY
                y: -> ANY

ORDERING        KBO
                additive_inverse=1, add=1, commutator=1, multiply=1, associator=1, additive_identity=1, y=1, x=1
                additive_inverse > add > commutator > multiply > associator > additive_identity > y > x

VARIABLES       X,Y,Z: ANY

EQUATIONS       additive_inverse(additive_inverse(X)) = X   % additive_inverse_additive_inverse
                add(X, add(Y, Z)) = add(add(X, Y), Z)   % associativity_for_addition
                associator(X, Y, Z) = add(multiply(multiply(X, Y), Z), additive_inverse(multiply(X, multiply(Y, Z))))   % associator
                add(X, Y) = add(Y, X)   % commutativity_for_addition
                commutator(X, Y) = add(multiply(Y, X), additive_inverse(multiply(X, Y)))   % commutator
                multiply(X, add(Y, Z)) = add(multiply(X, Y), multiply(X, Z))   % distribute1
                multiply(add(X, Y), Z) = add(multiply(X, Z), multiply(Y, Z))   % distribute2
                multiply(X, add(Y, additive_inverse(Z))) = add(multiply(X, Y), additive_inverse(multiply(X, Z)))   % distributivity_of_difference1
                multiply(add(X, additive_inverse(Y)), Z) = add(multiply(X, Z), additive_inverse(multiply(Y, Z)))   % distributivity_of_difference2
                multiply(additive_inverse(X), add(Y, Z)) = add(additive_inverse(multiply(X, Y)), additive_inverse(multiply(X, Z)))   % distributivity_of_difference3
                multiply(add(X, Y), additive_inverse(Z)) = add(additive_inverse(multiply(X, Z)), additive_inverse(multiply(Y, Z)))   % distributivity_of_difference4
                multiply(additive_inverse(X), Y) = additive_inverse(multiply(X, Y))   % inverse_product1
                multiply(X, additive_inverse(Y)) = additive_inverse(multiply(X, Y))   % inverse_product2
                add(additive_identity, X) = X   % left_additive_identity
                add(additive_inverse(X), X) = additive_identity   % left_additive_inverse
                multiply(additive_identity, X) = additive_identity   % left_multiplicative_zero
                multiply(additive_inverse(X), additive_inverse(Y)) = multiply(X, Y)   % product_of_inverses
                add(X, additive_identity) = X   % right_additive_identity
                add(X, additive_inverse(X)) = additive_identity   % right_additive_inverse
                multiply(multiply(X, Y), Y) = multiply(X, multiply(Y, Y))   % right_alternative
                multiply(X, additive_identity) = additive_identity   % right_multiplicative_zero

CONCLUSION      add(add(add(add(add(multiply(associator(x, x, y), multiply(associator(x, x, y), associator(x, x, y))), multiply(associator(x, x, y), multiply(associator(x, x, y), associator(x, x, y)))), multiply(associator(x, x, y), multiply(associator(x, x, y), associator(x, x, y)))), multiply(associator(x, x, y), multiply(associator(x, x, y), associator(x, x, y)))), multiply(associator(x, x, y), multiply(associator(x, x, y), associator(x, x, y)))), multiply(associator(x, x, y), multiply(associator(x, x, y), associator(x, x, y)))) = additive_identity   % prove_conjecture_3
%--------------------------------------------------------------------------
