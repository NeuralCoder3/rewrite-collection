%--------------------------------------------------------------------------
% File     : BOO031-1 : TPTP v2.4.1. Released v2.2.0.
% Domain   : Boolean Algebra
% Problem  : Dual BA 3-basis, proof of distributivity.
% Version  : [MP96] (equality) axioms : Especial.
% English  : This is part of a proof of the existence of a self-dual
%            3-basis for Boolean algebra by majority reduction.

% Refs     : [McC98] McCune (1998), Email to G. Sutcliffe
%          : [MP96]  McCune & Padmanabhan (1996), Automated Deduction in Eq
% Source   : [McC98]
% Names    : DUAL-BA-8-a [MP96]

% Status   : unsatisfiable
% Rating   : 0.00 v2.4.0, 0.00 v2.2.1
% Syntax   : Number of clauses    :   12 (   0 non-Horn;  12 unit;   1 RR)
%            Number of literals   :   12 (  12 equality)
%            Maximal clause size  :    1 (   1 average)
%            Number of predicates :    1 (   0 propositional; 2-2 arity)
%            Number of functors   :    8 (   5 constant; 0-2 arity)
%            Number of variables  :   27 (   8 singleton)
%            Maximal term depth   :    4 (   2 average)

% Comments :
%          : tptp2X -f waldmeister -t rm_equality:rstfp BOO031-1.p 
%--------------------------------------------------------------------------

NAME            Unknown

MODE            PROOF

SORTS           ANY

SIGNATURE       0: -> ANY
                1: -> ANY
                a: -> ANY
                add: ANY ANY -> ANY
                b: -> ANY
                c: -> ANY
                inverse: ANY -> ANY
                multiply: ANY ANY -> ANY

ORDERING        KBO
                inverse=1, add=1, multiply=1, 0=1, 1=1, c=1, b=1, a=1
                inverse > add > multiply > 0 > 1 > c > b > a

VARIABLES       X,Y,Z: ANY

EQUATIONS       add(X, inverse(X)) = 1   % additive_inverse
                add(add(X, Y), Z) = add(X, add(Y, Z))   % associativity_of_add
                multiply(multiply(X, Y), Z) = multiply(X, multiply(Y, Z))   % associativity_of_multiply
                add(multiply(X, Y), add(multiply(Y, Z), multiply(Z, X))) = multiply(add(X, Y), multiply(add(Y, Z), add(Z, X)))   % distributivity
                add(X, multiply(Y, multiply(X, Z))) = X   % l1
                multiply(X, add(Y, add(X, Z))) = X   % l2
                add(add(multiply(X, Y), multiply(Y, Z)), Y) = Y   % l3
                multiply(multiply(add(X, Y), add(Y, Z)), Y) = Y   % l4
                multiply(X, inverse(X)) = 0   % multiplicative_inverse
                multiply(add(X, inverse(X)), Y) = Y   % property3
                add(multiply(X, inverse(X)), Y) = Y   % property3_dual

CONCLUSION      multiply(a, add(b, c)) = add(multiply(b, a), multiply(c, a))   % prove_multiply_add_property
%--------------------------------------------------------------------------
