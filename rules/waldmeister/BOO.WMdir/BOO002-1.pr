%--------------------------------------------------------------------------
% File     : BOO002-1 : TPTP v2.4.1. Released v1.0.0.
% Domain   : Boolean Algebra (Ternary)
% Problem  : In B3 algebra, X * X^-1 * Y = Y
% Version  : [OTTER] (equality) axioms : Reduced > Incomplete.
% English  : 

% Refs     : [LO85]  Lusk & Overbeek (1985), Reasoning about Equality
%          : [Ove90] Overbeek (1990), ATP competition announced at CADE-10
%          : [Ove93] Overbeek (1993), The CADE-11 Competitions: A Personal 
%          : [LM93]  Lusk & McCune (1993), Uniform Strategies: The CADE-11 
%          : [Zha93] Zhang (1993), Automated Proofs of Equality Problems in
% Source   : [Ove90]
% Names    : Problem 5 [LO85]
%          : CADE-11 Competition Eq-3 [Ove90]
%          : THEOREM EQ-3 [LM93]
%          : PROBLEM 3 [Zha93]

% Status   : unsatisfiable
% Rating   : 0.00 v2.2.1, 0.33 v2.2.0, 0.43 v2.1.0, 0.38 v2.0.0
% Syntax   : Number of clauses    :    5 (   0 non-Horn;   5 unit;   1 RR)
%            Number of literals   :    5 (   5 equality)
%            Maximal clause size  :    1 (   1 average)
%            Number of predicates :    1 (   0 propositional; 2-2 arity)
%            Number of functors   :    4 (   2 constant; 0-3 arity)
%            Number of variables  :   11 (   2 singleton)
%            Maximal term depth   :    3 (   2 average)

% Comments : 
%          : tptp2X -f waldmeister -t rm_equality:rstfp BOO002-1.p 
%--------------------------------------------------------------------------

NAME            Unknown

MODE            PROOF

SORTS           ANY

SIGNATURE       a: -> ANY
                b: -> ANY
                inverse: ANY -> ANY
                multiply: ANY ANY ANY -> ANY

ORDERING        KBO
                inverse=1, multiply=1, b=1, a=1
                inverse > multiply > b > a

VARIABLES       V,W,X,Y,Z: ANY

EQUATIONS       multiply(multiply(V, W, X), Y, multiply(V, W, Z)) = multiply(V, W, multiply(X, Y, Z))   % associativity
                multiply(inverse(Y), Y, X) = X   % left_inverse
                multiply(Y, X, X) = X   % ternary_multiply_1
                multiply(X, X, Y) = X   % ternary_multiply_2

CONCLUSION      multiply(a, inverse(a), b) = b   % prove_equation
%--------------------------------------------------------------------------
