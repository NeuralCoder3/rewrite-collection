%--------------------------------------------------------------------------
% File     : COL058-3 : TPTP v2.4.1. Released v1.0.0.
% Domain   : Combinatory Logic
% Problem  : If there's a lark, then there's an egocentric bird.
% Version  : Especial.
%            Theorem formulation : The egocentric bird is provided and 
%            checked.
% English  : Suppose we are given a forest that conrtains a lark, and 
%            we are not given any other information. Prove that at least 
%            one bird in the forest must be egocentric.

% Refs     : [Smu85] Smullyan (1978), To Mock a Mocking Bird and Other Logi
%          : [GO86]  Glickfield & Overbeek (1986), A Foray into Combinatory
% Source   : [GO86]
% Names    : - [GO86]

% Status   : unsatisfiable
% Rating   : 0.00 v2.2.1, 0.11 v2.2.0, 0.14 v2.1.0, 0.00 v2.0.0
% Syntax   : Number of clauses    :    2 (   0 non-Horn;   2 unit;   1 RR)
%            Number of literals   :    2 (   2 equality)
%            Maximal clause size  :    1 (   1 average)
%            Number of predicates :    1 (   0 propositional; 2-2 arity)
%            Number of functors   :    2 (   1 constant; 0-2 arity)
%            Number of variables  :    2 (   0 singleton)
%            Maximal term depth   :    6 (   4 average)

% Comments : 
%          : tptp2X -f waldmeister -t rm_equality:rstfp COL058-3.p 
%--------------------------------------------------------------------------

NAME            Unknown

MODE            PROOF

SORTS           ANY

SIGNATURE       lark: -> ANY
                response: ANY ANY -> ANY

ORDERING        KBO
                response=1, lark=1
                response > lark

VARIABLES       X1,X2: ANY

EQUATIONS       response(response(lark, X1), X2) = response(X1, response(X2, X2))   % lark_exists

CONCLUSION      response(response(response(response(lark, lark), response(lark, response(lark, lark))), response(lark, response(lark, lark))), response(response(response(lark, lark), response(lark, response(lark, lark))), response(lark, response(lark, lark)))) = response(response(response(lark, lark), response(lark, response(lark, lark))), response(lark, response(lark, lark)))   % prove_the_bird_exists
%--------------------------------------------------------------------------
