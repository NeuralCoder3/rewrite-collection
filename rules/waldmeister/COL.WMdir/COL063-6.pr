%--------------------------------------------------------------------------
% File     : COL063-6 : TPTP v2.4.1. Bugfixed v1.2.0.
% Domain   : Combinatory Logic
% Problem  : Find combinator equivalent to F from B and T
% Version  : [WM88] (equality) axioms.
%            Theorem formulation : The combinator is provided and checked.
% English  : Construct from B and T alone a combinator that behaves as the 
%            combinator F does, where ((Bx)y)z = x(yz), (Tx)y = yx, 
%            ((Fx)y)z = (zy)x.

% Refs     : [WM88]  Wos & McCune (1988), Challenge Problems Focusing on Eq
%          : [WW+90] Wos et al. (1990), Automated Reasoning Contributes to 
% Source   : [TPTP]
% Names    : 

% Status   : unsatisfiable
% Rating   : 0.00 v2.1.0, 0.43 v2.0.0
% Syntax   : Number of clauses    :    3 (   0 non-Horn;   3 unit;   1 RR)
%            Number of literals   :    3 (   3 equality)
%            Maximal clause size  :    1 (   1 average)
%            Number of predicates :    1 (   0 propositional; 2-2 arity)
%            Number of functors   :    6 (   5 constant; 0-2 arity)
%            Number of variables  :    5 (   0 singleton)
%            Maximal term depth   :   11 (   4 average)

% Comments : 
%          : tptp2X -f waldmeister -t rm_equality:rstfp COL063-6.p 
% Bugfixes : v1.2.0 : Redundant [fgh]_substitution axioms removed.
%--------------------------------------------------------------------------

NAME            Unknown

MODE            PROOF

SORTS           ANY

SIGNATURE       apply: ANY ANY -> ANY
                b: -> ANY
                t: -> ANY
                x: -> ANY
                y: -> ANY
                z: -> ANY

ORDERING        KBO
                apply=1, b=1, t=1, z=1, y=1, x=1
                apply > b > t > z > y > x

VARIABLES       X,Y,Z: ANY

EQUATIONS       apply(apply(apply(b, X), Y), Z) = apply(X, apply(Y, Z))   % b_definition
                apply(apply(t, X), Y) = apply(Y, X)   % t_definition

CONCLUSION      apply(apply(apply(apply(apply(b, apply(apply(b, apply(apply(b, apply(t, t)), b)), b)), t), x), y), z) = apply(apply(z, y), x)   % prove_f_combinator
%--------------------------------------------------------------------------
