%--------------------------------------------------------------------------
% File     : GRP001-4 : TPTP v2.4.1. Released v1.0.0.
% Domain   : Group Theory
% Problem  : X^2 = identity => commutativity
% Version  : [Wos65] (equality) axioms : Incomplete.
% English  : If the square of every element is the identity, the system 
%            is commutative.

% Refs     : [Wos65] Wos (1965), Unpublished Note
%          : [Pel86] Pelletier (1986), Seventy-five Problems for Testing Au
% Source   : [Pel86]
% Names    : Pelletier 65 [Pel86]
%          : x2_quant.in [OTTER]

% Status   : unsatisfiable
% Rating   : 0.00 v2.2.1, 0.22 v2.2.0, 0.29 v2.1.0, 0.25 v2.0.0
% Syntax   : Number of clauses    :    5 (   0 non-Horn;   5 unit;   2 RR)
%            Number of literals   :    5 (   5 equality)
%            Maximal clause size  :    1 (   1 average)
%            Number of predicates :    1 (   0 propositional; 2-2 arity)
%            Number of functors   :    5 (   4 constant; 0-2 arity)
%            Number of variables  :    5 (   0 singleton)
%            Maximal term depth   :    3 (   1 average)

% Comments : [Pel86] says "... problems, published I think, by Larry Wos 
%            (but I cannot locate where)."
%          : tptp2X -f waldmeister -t rm_equality:rstfp GRP001-4.p 
%--------------------------------------------------------------------------

NAME            Unknown

MODE            PROOF

SORTS           ANY

SIGNATURE       a: -> ANY
                b: -> ANY
                c: -> ANY
                identity: -> ANY
                multiply: ANY ANY -> ANY

ORDERING        KBO
                multiply=1, a=1, b=1, c=1, identity=1
                multiply > a > b > c > identity

VARIABLES       X,Y,Z: ANY

EQUATIONS       multiply(a, b) = c   % a_times_b_is_c
                multiply(multiply(X, Y), Z) = multiply(X, multiply(Y, Z))   % associativity
                multiply(identity, X) = X   % left_identity
                multiply(X, X) = identity   % squareness

CONCLUSION      multiply(b, a) = c   % prove_b_times_a_is_c
%--------------------------------------------------------------------------
