%--------------------------------------------------------------------------
% File     : GRP167-5 : TPTP v2.4.1. Bugfixed v1.2.1.
% Domain   : Group Theory (Lattice Ordered)
% Problem  : Product of positive and negative parts
% Version  : [Fuc94] (equality) axioms : Augmented.
% English  : Each element in a lattice ordered group can be stated as a
%            product of it's positive and it's negative part.

% Refs     : [Fuc94] Fuchs (1994), The Application of Goal-Orientated Heuri
%          : [Sch95] Schulz (1995), Explanation Based Learning for Distribu
%          : [Dah95] Dahn (1995), Email to G. Sutcliffe
% Source   : [TPTP]
% Names    : 

% Status   : unsatisfiable
% Rating   : 0.00 v2.2.1, 0.33 v2.2.0, 0.43 v2.1.0, 0.20 v2.0.0
% Syntax   : Number of clauses    :   21 (   0 non-Horn;  21 unit;   1 RR)
%            Number of literals   :   21 (  21 equality)
%            Maximal clause size  :    1 (   1 average)
%            Number of predicates :    1 (   0 propositional; 2-2 arity)
%            Number of functors   :    8 (   2 constant; 0-2 arity)
%            Number of variables  :   43 (   2 singleton)
%            Maximal term depth   :    3 (   2 average)

% Comments : ORDERING LPO inverse > greatest_lower_bound >
%            least_upper_bound > product > negative_part > positive_part > 
%            identity > a
%          : This is a standardized version of the problem that appears in
%            [Sch95].
%          : [Dah95] suggested the addition of p10 as a useful lemma.
%          : tptp2X -f waldmeister -t rm_equality:rstfp GRP167-5.p 
% Bugfixes : v1.2.1 - Duplicate axioms in GRP004-2.ax removed.
%          : v1.2.1 - Clause p10 fixed.
%--------------------------------------------------------------------------

NAME            Unknown

MODE            PROOF

SORTS           ANY

SIGNATURE       a: -> ANY
                greatest_lower_bound: ANY ANY -> ANY
                identity: -> ANY
                inverse: ANY -> ANY
                least_upper_bound: ANY ANY -> ANY
                multiply: ANY ANY -> ANY
                negative_part: ANY -> ANY
                positive_part: ANY -> ANY

ORDERING        KBO
                inverse=1, negative_part=1, positive_part=1, greatest_lower_bound=1, least_upper_bound=1, multiply=1, identity=1, a=1
                inverse > negative_part > positive_part > greatest_lower_bound > least_upper_bound > multiply > identity > a

VARIABLES       X,Y,Z,A,B: ANY

EQUATIONS       multiply(multiply(X, Y), Z) = multiply(X, multiply(Y, Z))   % associativity
                greatest_lower_bound(X, greatest_lower_bound(Y, Z)) = greatest_lower_bound(greatest_lower_bound(X, Y), Z)   % associativity_of_glb
                least_upper_bound(X, least_upper_bound(Y, Z)) = least_upper_bound(least_upper_bound(X, Y), Z)   % associativity_of_lub
                greatest_lower_bound(X, least_upper_bound(X, Y)) = X   % glb_absorbtion
                greatest_lower_bound(X, X) = X   % idempotence_of_gld
                least_upper_bound(X, X) = X   % idempotence_of_lub
                positive_part(X) = least_upper_bound(X, identity)   % lat4_1
                negative_part(X) = greatest_lower_bound(X, identity)   % lat4_2
                least_upper_bound(X, greatest_lower_bound(Y, Z)) = greatest_lower_bound(least_upper_bound(X, Y), least_upper_bound(X, Z))   % lat4_3
                greatest_lower_bound(X, least_upper_bound(Y, Z)) = least_upper_bound(greatest_lower_bound(X, Y), greatest_lower_bound(X, Z))   % lat4_4
                multiply(identity, X) = X   % left_identity
                multiply(inverse(X), X) = identity   % left_inverse
                least_upper_bound(X, greatest_lower_bound(X, Y)) = X   % lub_absorbtion
                multiply(X, greatest_lower_bound(Y, Z)) = greatest_lower_bound(multiply(X, Y), multiply(X, Z))   % monotony_glb1
                multiply(greatest_lower_bound(Y, Z), X) = greatest_lower_bound(multiply(Y, X), multiply(Z, X))   % monotony_glb2
                multiply(X, least_upper_bound(Y, Z)) = least_upper_bound(multiply(X, Y), multiply(X, Z))   % monotony_lub1
                multiply(least_upper_bound(Y, Z), X) = least_upper_bound(multiply(Y, X), multiply(Z, X))   % monotony_lub2
                inverse(least_upper_bound(A, B)) = greatest_lower_bound(inverse(A), inverse(B))   % p10
                greatest_lower_bound(X, Y) = greatest_lower_bound(Y, X)   % symmetry_of_glb
                least_upper_bound(X, Y) = least_upper_bound(Y, X)   % symmetry_of_lub

CONCLUSION      a = multiply(positive_part(a), negative_part(a))   % prove_lat4
%--------------------------------------------------------------------------
